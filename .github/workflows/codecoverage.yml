
name: Codecoverage


# https://github.com/appleboy/gh-pages-action

# https://github.com/RubbaBoy/BYOB (badges)

# read:
# https://help.github.com/en/articles/metadata-syntax-for-github-actions#inputs
# https://github.com/actions/starter-workflows/issues/68
# https://github.com/firepress-org/rclone-in-docker/blob/master/.github/workflows/ci_dockerfile_is_master.yml
# https://github.com/firepress-org/rclone-in-docker/blob/master/.github/workflows/ci_dockerfile_not_master.yml
#

on:
  push:
    branches:
      - master

jobs:
  # should maybe split this into phpcs, phpunit, release
  ci:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: tests/_output/html

      - name: Make envfile from secrets
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_MAILTRAP_USERNAME: ${{ secrets.MAILTRAP_USERNAME }}
          envkey_MAILTRAP_PASSWORD: ${{ secrets.MAILTRAP_PASSWORD }}
          envkey_SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          envkey_SMTP_PORT: ${{ secrets.SMTP_PORT }}
          envkey_MAILTRAP_API_TOKEN: ${{ secrets.MAILTRAP_API_TOKEN }}
          envkey_MAILTRAP_INBOX: ${{ secrets.MAILTRAP_INBOX }}
          file_name: .env.secret

      - name: Read .env.testing
        uses: c-py/action-dotenv-to-setenv@v1
        with:
          env-file: .env.testing

      - name: Test env access
        run: echo "CREATE USER '"$TEST_DB_USER"'@'%' IDENTIFIED WITH mysql_native_password BY '"$TEST_DB_PASSWORD"';"

      - name: Configure MySQL
        run: |
          mysql -h 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -u root -ppassword -e "CREATE USER '"$TEST_DB_USER"'@'%' IDENTIFIED WITH mysql_native_password BY '"$TEST_DB_PASSWORD"';";
          mysql -h 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -u root -ppassword -e "CREATE DATABASE "$TEST_SITE_DB_NAME"; USE "$TEST_SITE_DB_NAME"; GRANT ALL PRIVILEGES ON "$TEST_SITE_DB_NAME".* TO '"$TEST_DB_USER"'@'%';";
          mysql -h 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -u root -ppassword -e "CREATE DATABASE "$TEST_DB_NAME"; USE "$TEST_DB_NAME"; GRANT ALL PRIVILEGES ON "$TEST_DB_NAME".* TO '"$TEST_DB_USER"'@'%';";

      - name: Test database creation
        run: |
          mysql -h 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -u root -ppassword -e "SHOW DATABASES";
          echo ${{ job.services.mysql.ports['3306'] }}
          find . -depth \( -name '.env.testing' \) -exec sed -i "s/=\"127.0.0.1\"/=\"127.0.0.1:${{ job.services.mysql.ports['3306'] }}\"/g" {} +
          tail .env.testing -n 1000

      - name: Run composer install
        uses: php-actions/composer@v1

      - name: Run unit tests
        run: vendor/bin/codecept run unit --coverage unit.cov || true;

      - name: Run wpunit tests
        run: vendor/bin/codecept run wpunit --coverage wpunit.cov || true;

      - name: Clear previous code coverage
        run: |
          cd tests/_output/html
          rm -rf *
          cd ../../..

      - name: Merge code coverage
        run: vendor/bin/phpcov merge --clover tests/_output/clover.xml --html tests/_output/html tests/_output --text;

      - name: Edit phpcov html output to work with gh-pages
        run: |
          cd tests/_output/html
          mv .css css; find . -depth -name '*.html' -exec sed -i "s/.css\//css\//" {} +
          mv .icons icons; find . -depth -name '*.html' -exec sed -i "s/.icons\//icons\//" {} +
          mv .js js; find . -depth -name '*.html' -exec sed -i "s/.js\//js\//" {} +
          git add *
          cd ../../..

      - name: Discard MySQL port changes in .env before commiting other changes
        run: |
          git checkout -- .env.testing

      - name: Commit code coverage to gh-pages
        uses: stefanzweifel/git-auto-commit-action@v4.1.1
        with:
          repository: tests/_output/html
          branch: gh-pages
          commit_message: "Commit code coverage to gh-pages"
          commit_options:
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Update README badge
        run: vendor/bin/php-coverage-badger tests/_output/clover.xml .github/coverage.svg PHPUnit

      - name: Commit code coverage badge
        uses: stefanzweifel/git-auto-commit-action@v4.1.1
        with:
          commit_message: "Commit code coverage badge"
